module.exports = function(grunt) {

	var path = require('path'), 
		fs = require('fs'),
		os = require("os");

	var isMac = os.platform() == 'darwin' ? true : false;

	grunt.registerMultiTask('get_data', 'get data', function() {
    	
    	var arr = [];
    	var arrFile = [];
    	var info = this.data;
		var docRoot = info.path;
		var template = info.template;
		var dest = info.dataDest;

		var indexTemplate = grunt.file.read(template);
		var stringRootData = getTree(docRoot);
		var destData = JSON.stringify(stringRootData);
		indexTemplate = indexTemplate.replace('@@data', destData);
		indexTemplate = indexTemplate.replace('@@arrFile', JSON.stringify(arrFile));
		grunt.file.write(dest, indexTemplate);

		function walk(uri,filter,tree) {
			
			var node = {
				name		: null,
				children	: [],
				pNode		: null,
			}; 
			
			if(filter(uri)){
				var stat = fs.lstatSync(uri);
				var link;
				if(stat.isFile()){

					//转换成绝对路径
					var fileName,
						link;

					if(isMac) {

						fileName = uri.substring(uri.lastIndexOf('\/')+1).replace('.md', '');
						link = uri.replace('..\/doc', './views').replace(/\/+/g, '\/').replace('md', 'html');

					} else {

						fileName = uri.substring(uri.lastIndexOf('\\')+1).replace('.md', '');
						link = uri.replace('..\\doc', './views').replace(/\\+/g, '\/').replace('md', 'html');

					}

					arrFile.push(fileName);					
					uri = path.resolve(uri);

					switch(path.extname(uri)){
						case '.md':
							node.name = uri;
							node.fileName = fileName;
							node.link = link;
							node.root = '';
							break;
					}
				}
				if(stat.isDirectory()){
					
					node.name = uri;
					if(isMac) {
						node.root = uri.substring(uri.lastIndexOf('\/') + 1);
					} else {
						node.root = uri.substring(uri.lastIndexOf('\\') + 1);
					}
					fs.readdirSync(uri).forEach(function(part){
						var n  = walk(path.join(uri, part),filter,tree);
						if(n.name){
							n.pNode = node.name;//增加父节点名称
							node.children.push(n);
						}
						n = null;
					});
					if(node.name && node.name === tree.name){
						tree.children.push(node);
					}
				}
				stat = null;
			}
			
			return node;
		}
		
		//排除basename以.或者_开头的目录|文件(如.svn,_html,_psd, _a.psd等)
		function defaultFilter(){
			/*var start = path.basename(uri).charAt(0);
			if(start === '.' || start === '_'){
				start = null;
				return false;
			}*/
			return true;
		}
		
		/**
		 * 递归遍历目录文件,获取所有文件路径.
		 * @param{String}rootDir
		 * @param{Function}filter:过滤函数,返回false就排除目录|文件
		 * @return{Object}
		 * */
		function getTree(rootDir, filter) {
			filter = filter || defaultFilter;
			
			var tree = {
				name		: rootDir,
				children	: []
			};
			
			walk(rootDir,filter,tree);
			
			return tree.children[0];
		};


  	});

};



